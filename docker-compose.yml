# ###################################
# This file is generated by puppet
# PLEASE DON'T MODIFY BY HAND
# ###################################

version: '2.3'
services:
  ########################
  # TRAEFIK
  ########################
  traefik:
    image: traefik:v1.4.3
    command: --web --docker --docker.domain=docker.localhost --logLevel=DEBUG
    ports:
      - "8080:80"
      - "7071:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./data/traefik/acme:/etc/traefik/acme
    labels:
      - "traefik.enable=false"
    networks:
      - frontend

  ########################
  # CHE
  ########################
  che:
    image: eclipse/che-server-multiuser:5.20.1
    env_file:
      - './config/che/che.env'
    environment:
     - "CHE_KEYCLOAK_AUTH__SERVER__URL=http://10.70.2.104:8080/auth"
     - "TRAEFIK_PORT=8080"
     - "CHE_HOST=10.70.2.104"
     - "CHE_IP=10.70.2.104"
     - "CHE_PORT=8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './data/che/data:/data:rw'
      - './data/che/logs:/logs:rw'
      - './config/che:/conf'
     # - '/home/zagrebaev/git/che/assembly-multiuser/assembly-main/target/eclipse-che-5.19.0/eclipse-che-5.19.0:/assembly'
    labels:
      - "traefik.backend=che-server"
      - "traefik.backend.loadbalancer.sticky=true"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.port=8080"
      - "traefik.enable=true"
      - "traefik.docker.network=checloudv2_frontend"
    networks:
      - db
      - frontend

  ########################
  # POSTGRES
  ########################
  postgres:
    image: paunin/postdock-pgsql:9.6
    environment:
      POSTGRES_PASSWORD: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_DB: keycloak
      CHE_POSTGRES_USERNAME: pgche
      CHE_POSTGRES_PASSWORD: pgchepassword
      CHE_POSTGRES_DATABASE: dbche
      PARTNER_NODES: "postgres"
      NODE_ID: 1
      NODE_NAME: node1
      CLUSTER_NODE_NETWORK_NAME: postgres #(default: hostname of the node)
      NODE_PRIORITY: 100  #(default: 100)
      SSH_ENABLE: 1
      CLEAN_OVER_REWIND: 0
      CONFIGS: "listen_addresses:'*',max_replication_slots:5"
                                  # in format variable1:value1[,variable2:value2[,...]]
                                  # used for pgpool.conf file
            #defaults:
            #CLUSTER_NAME: pg_cluster # default is pg_cluster
            #REPLICATION_DB: replication_db # default is replication_db
            #REPLICATION_USER: replication_user # default is replication_user
            #REPLICATION_PASSWORD: replication_pass # default is replication_pass
    volumes:
      - './data/postgres:/var/lib/postgresql/data'
      - './config/postgres/init-che-user.sh:/docker-entrypoint-initdb.d/init-che-user.sh'
    healthcheck:
        test: [ "CMD", "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U keycloak -q -d keycloak -c 'SELECT 1'" ]
        interval: 10s
        timeout: 10s
        retries: 10
    labels:
      - "traefik.enable=false"
    networks:
      - db

  ########################
  # BARMAN
  ########################
  backup:
    image: paunin/postdock-barman
    environment:
      REPLICATION_USER: replication_user # default is replication_user
      REPLICATION_PASSWORD: replication_pass # default is replication_pass
      REPLICATION_HOST: postgres
      POSTGRES_PASSWORD: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_DB: keycloak
      SSH_ENABLE: 1
      BACKUP_SCHEDULE: "*/10 * * * *"
    volumes:
      - ./data/postgres-backup:/var/backups
    labels:
      - "traefik.enable=false"
    networks:
      - db

  ########################
  # KEYCLOAK
  ########################
  keycloak:
    image: jboss/keycloak-openshift:3.4.0.Final
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint:
      - start-keycloak.sh
      - -Dkeycloak.migration.action=import
      - -Dkeycloak.migration.provider=dir
      - -Dkeycloak.migration.strategy=IGNORE_EXISTING
      - -Dkeycloak.migration.dir=/opt/jboss/keycloak/realms/
      - -Djboss.bind.address=0.0.0.0
    environment:
      - POSTGRES_PORT_5432_TCP_ADDR=postgres
      - POSTGRES_PORT_5432_TCP_PORT=5432
      - POSTGRES_DATABASE=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
      - PROXY_ADDRESS_FORWARDING=true
      - CHE_REDIRECT_URIS="http://10.70.2.104:8080/*"
      - CHE_WEB_ORIGINS="http://10.70.2.104:8080"
      - LDAP_BASE_DN=dc=base,dc=com
      - LDAP_PASSWORD=adminpassword
    volumes:
      - './config/keycloak/che:/opt/jboss/keycloak/themes/che'
      - './config/keycloak/realms/template:/tmp/keycloak/che'
      - './config/keycloak/keycloak-entrypoint.sh:/opt/jboss/docker-entrypoint.sh'
      #- './data/keycloak:/opt/jboss/keycloak/standalone/data:rw'
      #- './logs/keycloak:/opt/jboss/keycloak/standalone/log:rw'
    labels:
      - "traefik.backend=keycloak"
      - "traefik.backend.loadbalancer.sticky=true"
      - "traefik.frontend.rule=PathPrefix:/auth"
      - "traefik.port=8080"
      - "traefik.docker.network=checloudv2_frontend"
      - "traefik.enable=true"
    networks:
      - db
      - frontend  

  ########################
  # OPENLDAP
  ########################
  openldap:
    image: airaketa/openldap:1.1.9
    entrypoint: /container/service/docker-entrypoint.sh
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "1C"
      LDAP_DOMAIN: "base.com"
      LDAP_BASE_DN: "dc=base,dc=com"
      LDAP_ADMIN_PASSWORD: "adminpassword"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "hdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
      #Cron expression to schedule OpenLDAP config backup. Set to "every 10 minutes"
      LDAP_BACKUP_CONFIG_CRON_EXP: "*/10 * * * *"
      #Cron expression to schedule OpenLDAP data backup. Set to "every 10 minutes"
      LDAP_BACKUP_DATA_CRON_EXP: "*/10 * * * *"
      #Backup TTL in days
      LDAP_BACKUP_TTL: "15"
      ADD_DEFAULT_NODES_TIMEOUT: "60"   #in seconds
    stdin_open: true
    volumes:
      - ./data/openldap/var:/var/lib/ldap
      - ./data/openldap/etc:/etc/ldap/slapd.d
      - ./data/openldap/container:/container/service/slapd/assets/certs/
      - ./data/openldap/backup:/data/backup
    domainname: "base.com" # important: same as hostname
    hostname: "base.com"
    labels:
      - "traefik.enable=false"
    networks:
      - db

networks:
  db:
  frontend:

